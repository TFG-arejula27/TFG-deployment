#boxes
Ubu = 'generic/ubuntu2010'
#Deb = 'debian/buster64'

# @ IP Master = 192.168.1.W9
# @ IP worker w1 = 192.168.1.W1
# ... etc
# Valor ejemplo atribuido a alumnos al principio de asignatura, W = E (14)
MASTER = '192.168.0.149'
NODES = [
  { hostname: 'm', type: "master", ip: MASTER, mem: 1000, m: MASTER,host:'155.210.158.19' },
  { hostname: 'w1', type: "worker", ip: '192.168.0.141', mem: 1000, m: MASTER,host:'155.210.158.19' },
  { hostname: 'w2', type: "worker", ip: '192.168.0.142', mem: 1000, m: MASTER,host:'155.210.158.19' },
  { hostname: 'w3', type: "worker", ip: '192.168.0.143', mem: 1000, m: MASTER,host:'155.210.158.19' },
]

Vagrant.configure("2") do |config|
    NODES.each do |node|
        config.vm.define node[:hostname] do |nodeconfig|
            nodeconfig.vm.box = Ubu
            nodeconfig.vm.hostname = node[:hostname]
            
            nodeconfig.vm.synced_folder '.', '/vagrant',type:"rsync"
            

            nodeconfig.vm.network :public_network,
                    bridge: "enp4s0",
                    ip: node[:ip],
                    # virtualbox__intnet: true,
                    nic_type: "virtio"
            
            nodeconfig.vm.provider :libvirt do |v|
              #driver de kvm
              v.driver = "kvm"
              #direcciÃ³n del host remoto
              v.host = node[:host]
              #usar ssh
              v.connect_via_ssh=true
              
              v.username="iarejula"
              v.id_ssh_key_file = "/home/arejula27/.ssh/id_rsa.pub"
            
              v.memory = node[:mem]
              v.cpus = 1
              v.keymap = 'es'
              if node[:type] == "worker"
                #v.storage :file, :size => '20G'
                v.storage :file, :size => '30G',:bus=>'scsi', :allow_existing =>false
              end

            end

                
            nodeconfig.vm.boot_timeout = 400
            
            nodeconfig.vm.provision "shell", 
                path: 'provision.sh', 
                args: [ node[:hostname], node[:ip], node[:m], node[:type] ]
            
           
            if node[:type] == "master"
              nodeconfig.trigger.after :up do |trigger|
                trigger.run = \
                        {inline: "sh -c 'cp k3s.yaml ~/.kube/config'"}
              end
            end
        end
    end
end
